using System.Collections;
using UnityEngine;

public class PlushSpawner : MonoBehaviour
{
    [Header("Plushie Prefab")]
    public GameObject plushPrefab;

    [Header("Spawn Timing")]
    public float spawnIntervalMin = 1.5f;
    public float spawnIntervalMax = 3.5f;

    [Header("Spawn Area")]
    public float spawnRangeX = 3f;
    public float spawnZ = 10f;
    public float plushYOffset = 0.5f;

    [Header("Random Scale Settings")]
    public float minScale = 0.6f;
    public float maxScale = 1.4f;

    [Header("Random Speed Settings")]
    public float minSpeed = 1.0f;
    public float maxSpeed = 3.0f;

    [Header("Spawn Limit")]
    public int maxPlushies = 20;
    private int spawnedPlushies = 0;

    void Start()
    {
        StartCoroutine(SpawnLoop());
    }

    private IEnumerator SpawnLoop()
    {
        while (true)
        {
            if (spawnedPlushies < maxPlushies)
            {
                SpawnPlushie();
            }
            else
            {
                Debug.Log("‚úÖ –î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–ª—é—à");
                yield break; // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ—Ä—É—Ç–∏–Ω—É
            }

            yield return new WaitForSeconds(Random.Range(spawnIntervalMin, spawnIntervalMax));
        }
    }

    /*void SpawnPlushie()
    {
        Debug.Log($"‚û°Ô∏è –ü–æ–ø—ã—Ç–∫–∞ —Å–ø–∞–≤–Ω–∞ –ø–ª—é—à–∏ #{spawnedPlushies + 1}");

        if (spawnedPlushies >= maxPlushies)
            return;

        float x = Random.Range(-spawnRangeX, spawnRangeX);
        Vector3 spawnPos = new Vector3(x, plushYOffset, spawnZ);

        GameObject plush = Instantiate(plushPrefab, spawnPos, Quaternion.identity);

        if (plush == null)
        {
            Debug.LogWarning("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Å–ø–∞–≤–Ω–∏—Ç—å –ø–ª—é—à—É!");
            return;
        }

        // ‚úÖ –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—Å–ø–∞–≤–Ω–∏–ª–∏:
        spawnedPlushies++;

        // –†–∞–Ω–¥–æ–º–Ω—ã–π –º–∞—Å—à—Ç–∞–±
        float randomScale = Random.Range(minScale, maxScale);
        plush.transform.localScale = Vector3.one * randomScale;

        // –†–∞–Ω–¥–æ–º–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å
        Plushie plushieScript = plush.GetComponent<Plushie>();
        if (plushieScript != null)
        {
            plushieScript.speed = Random.Range(minSpeed, maxSpeed);
        }

        Debug.Log($"üß∏ –ó–∞—Å–ø–∞–≤–Ω–µ–Ω–∞ –ø–ª—é—à–∞ #{spawnedPlushies}");
    }*/


    void SpawnPlushie()
    {
        if (spawnedPlushies >= maxPlushies) return;

        float x = Random.Range(-spawnRangeX, spawnRangeX);
        float randomScale = Random.Range(minScale, maxScale);

        // –°–æ–∑–¥–∞—ë–º –ø–ª—é—à—É
        GameObject plush = Instantiate(plushPrefab);
        plush.transform.localScale = Vector3.one * randomScale;

        // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–¥–∏—É—Å —Å—Ñ–µ—Ä—ã –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –ø–æ–∑–∏—Ü–∏—é –ø–æ Y
        float radius = plush.GetComponent<SphereCollider>().radius * randomScale;
        Vector3 spawnPos = new Vector3(x, radius, spawnZ);
        plush.transform.position = spawnPos;

        // –ù–∞–∑–Ω–∞—á–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å
        Plushie plushieScript = plush.GetComponent<Plushie>();
        if (plushieScript != null)
        {
            plushieScript.speed = Random.Range(minSpeed, maxSpeed);
        }

        spawnedPlushies++; // üí• –í–∞–∂–Ω–æ!
    }



}
